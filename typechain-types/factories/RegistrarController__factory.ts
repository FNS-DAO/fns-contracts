/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RegistrarController,
  RegistrarControllerInterface,
} from "../RegistrarController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRegistrar",
        name: "_base",
        type: "address",
      },
      {
        internalType: "contract IPriceOracle",
        name: "_prices",
        type: "address",
      },
      {
        internalType: "contract IReverseRegistrar",
        name: "_reverseRegistrar",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "DurationTooShort",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExpirationTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNameLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRecipient",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NameNotAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "RegisterCountLimited",
    type: "error",
  },
  {
    inputs: [],
    name: "ResolverRequiredWhenDataSupplied",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldExpTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newExpTime",
        type: "uint256",
      },
    ],
    name: "MaxExpirationTimeUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldMinLen",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMinLen",
        type: "uint256",
      },
    ],
    name: "MinLengthUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRenewed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IPriceOracle",
        name: "oldPriceOracle",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IPriceOracle",
        name: "newPriceOracle",
        type: "address",
      },
    ],
    name: "PriceOracleUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldRemain",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRemain",
        type: "uint256",
      },
    ],
    name: "RemainRegisterableUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawnERC20",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_REGISTRATION_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "base",
    outputs: [
      {
        internalType: "contract IRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxExpirationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minLengthAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "nameExpires",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prices",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "reverseRecord",
        type: "bool",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "remainRegisterable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "rentPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "base",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceOracle.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reverseRegistrar",
    outputs: [
      {
        internalType: "contract IReverseRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expTime",
        type: "uint256",
      },
    ],
    name: "setMaxExpirationTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minLen",
        type: "uint256",
      },
    ],
    name: "setMinLengthAvailable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPriceOracle",
        name: "_prices",
        type: "address",
      },
    ],
    name: "setPriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "setRemainRegisterable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "valid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001f6c38038062001f6c8339810160408190526200003491620000e6565b6200003f336200007d565b6001600160a01b03928316608052600180546001600160a01b031916928416929092179091551660a05260006002819055600380556004556200013a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000e357600080fd5b50565b600080600060608486031215620000fc57600080fd5b83516200010981620000cd565b60208501519093506200011c81620000cd565b60408501519092506200012f81620000cd565b809150509250925092565b60805160a051611de26200018a600039600081816102da0152611186015260008181610211015281816104ac0152818161089401528181610a9601528181610c890152610dc00152611de26000f3fe6080604052600436106101405760003560e01c806380869853116100b6578063acf1a8411161006f578063acf1a841146103ac578063aeb8ce9b146103bf578063d3419bf3146103df578063f025ed88146103ff578063f2fde38b1461041f578063f541b3821461043f57600080fd5b806380869853146102c857806383e7f6ff146102fc5780638a95b09f146103375780638da5cb5b1461034e5780639791c0971461036c578063a10fe45b1461038c57600080fd5b80635001f3b5116101085780635001f3b5146101ff57806351cff8d91461024b578063530e784f1461026b5780635692a2cf1461028b5780636d23abcb1461029e578063715018a6146102b357600080fd5b806301ffc9a71461014557806305457b3d1461017a5780632af895ed146101a857806340223872146101bd57806344004cc1146101df575b600080fd5b34801561015157600080fd5b50610165610160366004611586565b610454565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061019a610195366004611675565b61048b565b604051908152602001610171565b3480156101b457600080fd5b5060035461019a565b3480156101c957600080fd5b506101dd6101d83660046116aa565b610526565b005b3480156101eb57600080fd5b506101dd6101fa3660046116d8565b61056f565b34801561020b57600080fd5b506102337f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610171565b34801561025757600080fd5b506101dd610266366004611719565b6105fd565b34801561027757600080fd5b506101dd610286366004611719565b610683565b6101dd61029936600461179d565b6106f4565b3480156102aa57600080fd5b5060045461019a565b3480156102bf57600080fd5b506101dd610a3a565b3480156102d457600080fd5b506102337f000000000000000000000000000000000000000000000000000000000000000081565b34801561030857600080fd5b5061031c610317366004611880565b610a4e565b60408051825181526020928301519281019290925201610171565b34801561034357600080fd5b5061019a6224ea0081565b34801561035a57600080fd5b506000546001600160a01b0316610233565b34801561037857600080fd5b50610165610387366004611675565b610b68565b34801561039857600080fd5b506101dd6103a73660046116aa565b610b7e565b6101dd6103ba3660046118c5565b610be9565b3480156103cb57600080fd5b506101656103da366004611675565b610d90565b3480156103eb57600080fd5b50600154610233906001600160a01b031681565b34801561040b57600080fd5b506101dd61041a3660046116aa565b610e33565b34801561042b57600080fd5b506101dd61043a366004611719565b610e7c565b34801561044b57600080fd5b5060025461019a565b60006001600160e01b031982166301ffc9a760e01b148061048557506001600160e01b03198216633ddc813960e21b145b92915050565b80516020820120604051636b727d4360e11b815260048101829052600091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d6e4fa8690602401602060405180830381865afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190611911565b9392505050565b61052e610ef5565b60025460408051918252602082018390527f86d0a56f2420d363ef3bb16c92e10b7d3c23c2bc912e2d0733c71a8728879f04910160405180910390a1600255565b610577610ef5565b6001600160a01b03821661059e57604051634e46966960e11b815260040160405180910390fd5b604080516001600160a01b038581168252602082018490528416917f31e3f58fbb760a4c31ae5c6416229fca813390b5fa0de533ee4cef14b2b344db910160405180910390a26105f86001600160a01b0384168383610f4f565b505050565b610605610ef5565b6001600160a01b03811661062c57604051634e46966960e11b815260040160405180910390fd5b60405147808252906001600160a01b038316907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a261067f6001600160a01b03831682610fa1565b5050565b61068b610ef5565b600154604080516001600160a01b03928316815291831660208301527f56b5f80d8cac1479698aa7d01605fd6111e90b15fc4d2b377417f46034876cbd910160405180910390a1600180546001600160a01b0319166001600160a01b0392909216919091179055565b61073388888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d9092505050565b61075d5787876040516308eee0fd60e31b8152600401610754929190611953565b60405180910390fd5b6224ea0085101561078457604051639a71997b60e01b815260048101869052602401610754565b811580159061079a57506001600160a01b038416155b156107b8576040516334fd817160e21b815260040160405180910390fd5b6004546000036107db5760405163d25e6a2f60e01b815260040160405180910390fd5b600019600454146107fc57600480549060006107f68361197d565b91905055505b600061083f89898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a9250610a4e915050565b90506000816020015182600001516108579190611994565b90508034101561087a5760405163044044a560e21b815260040160405180910390fd5b60405163382ab79560e21b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e0aade54906108d1908e908e908e908e908e906004016119a7565b6020604051808303816000875af11580156108f0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109149190611911565b90506000600254118015610929575060025481115b15610947576040516308e8b93760e01b815260040160405180910390fd5b60008b8b6040516109599291906119e5565b60405180910390209050896001600160a01b0316817f69e37f151eb98a09618ddaa80c8cfaf1ce5996867c489f45b555b412271ebf278e8e88600001518960200151886040516109ad9594939291906119f5565b60405180910390a385156109c7576109c7888289896110ba565b8415610a1057610a108c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c92503391506111849050565b82341115610a2c57610a2c610a258434611a26565b3390610fa1565b505050505050505050505050565b610a42610ef5565b610a4c600061123e565b565b604080518082019091526000808252602082015282516020840120600154604051636b727d4360e11b8152600481018390526001600160a01b03918216916350e9a7159187917f0000000000000000000000000000000000000000000000000000000000000000169063d6e4fa8690602401602060405180830381865afa158015610add573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b019190611911565b866040518463ffffffff1660e01b8152600401610b2093929190611a89565b6040805180830381865afa158015610b3c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b609190611aae565b949350505050565b6000600354610b768361128e565b101592915050565b610b86610ef5565b6001811015610ba857604051631ae3550b60e01b815260040160405180910390fd5b60035460408051918252602082018390527f75448b63a1b5ac75d751483e6b667f38326c69d3954a66da039fed5e6e0c789b910160405180910390a1600355565b6000610c2c84848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250869250610a4e915050565b8051909150341015610c515760405163044044a560e21b815260040160405180910390fd5b6000808585604051610c649291906119e5565b60405190819003812063c475abff60e01b8252600482018190526024820186905291507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c475abff906044016020604051808303816000875af1158015610cda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfe9190611911565b91506000600254118015610d13575060025482115b15610d31576040516308e8b93760e01b815260040160405180910390fd5b807f3da24c024582931cfaf8267d8ed24d13a82a8068d5bd337d30ec45cea4e506ae87873486604051610d679493929190611afd565b60405180910390a28251341115610d88578251610d8890610a259034611a26565b505050505050565b80516020820120600090610da383610b68565b801561051f57506040516312dc929d60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396e494e890602401602060405180830381865afa158015610e0f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190611b24565b610e3b610ef5565b60045460408051918252602082018390527f018ec5e818763d15a7e019efe6958c58121b74f7844430aa3c12b5e216708d79910160405180910390a1600455565b610e84610ef5565b6001600160a01b038116610ee95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610754565b610ef28161123e565b50565b6000546001600160a01b03163314610a4c5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610754565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105f8908490611391565b80471015610ff15760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e63650000006044820152606401610754565b6000826001600160a01b03168260405160006040518083038185875af1925050503d806000811461103e576040519150601f19603f3d011682016040523d82523d6000602084013e611043565b606091505b50509050806105f85760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d617920686176652072657665727465640000000000006064820152608401610754565b604080517f78f6b1389af563cc5c91f234ea46b055e49658d8b999eeb9e0baef7dbbc93fdb6020808301919091528183018690528251808303840181526060830193849052805191012063e32954eb60e01b90925285906001600160a01b0382169063e32954eb9061113490859088908890606401611b41565b6000604051808303816000875af1158015611153573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261117b9190810190611be9565b50505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637a806d6b338385876040516020016111c79190611ce8565b6040516020818303038152906040526040518563ffffffff1660e01b81526004016111f59493929190611d10565b6020604051808303816000875af1158015611214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112389190611911565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051600090819081905b808210156113885760008583815181106112b4576112b4611d4e565b01602001516001600160f81b0319169050600160ff1b8110156112e3576112dc600184611994565b9250611375565b600760fd1b6001600160f81b031982161015611304576112dc600284611994565b600f60fc1b6001600160f81b031982161015611325576112dc600384611994565b601f60fb1b6001600160f81b031982161015611346576112dc600484611994565b603f60fa1b6001600160f81b031982161015611367576112dc600584611994565b611372600684611994565b92505b508261138081611d64565b935050611298565b50909392505050565b60006113e6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114639092919063ffffffff16565b8051909150156105f857808060200190518101906114049190611b24565b6105f85760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610754565b6060610b60848460008585600080866001600160a01b0316858760405161148a9190611d7d565b60006040518083038185875af1925050503d80600081146114c7576040519150601f19603f3d011682016040523d82523d6000602084013e6114cc565b606091505b50915091506114dd878383876114e8565b979650505050505050565b60608315611557578251600003611550576001600160a01b0385163b6115505760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610754565b5081610b60565b610b60838381511561156c5781518083602001fd5b8060405162461bcd60e51b81526004016107549190611d99565b60006020828403121561159857600080fd5b81356001600160e01b03198116811461051f57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156115ef576115ef6115b0565b604052919050565b600067ffffffffffffffff821115611611576116116115b0565b50601f01601f191660200190565b600082601f83011261163057600080fd5b813561164361163e826115f7565b6115c6565b81815284602083860101111561165857600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561168757600080fd5b813567ffffffffffffffff81111561169e57600080fd5b610b608482850161161f565b6000602082840312156116bc57600080fd5b5035919050565b6001600160a01b0381168114610ef257600080fd5b6000806000606084860312156116ed57600080fd5b83356116f8816116c3565b92506020840135611708816116c3565b929592945050506040919091013590565b60006020828403121561172b57600080fd5b813561051f816116c3565b60008083601f84011261174857600080fd5b50813567ffffffffffffffff81111561176057600080fd5b60208301915083602082850101111561177857600080fd5b9250929050565b8015158114610ef257600080fd5b80356117988161177f565b919050565b60008060008060008060008060c0898b0312156117b957600080fd5b883567ffffffffffffffff808211156117d157600080fd5b6117dd8c838d01611736565b909a50985060208b013591506117f2826116c3565b90965060408a0135955060608a01359061180b826116c3565b90945060808a0135908082111561182157600080fd5b818b0191508b601f83011261183557600080fd5b81358181111561184457600080fd5b8c60208260051b850101111561185957600080fd5b60208301955080945050505061187160a08a0161178d565b90509295985092959890939650565b6000806040838503121561189357600080fd5b823567ffffffffffffffff8111156118aa57600080fd5b6118b68582860161161f565b95602094909401359450505050565b6000806000604084860312156118da57600080fd5b833567ffffffffffffffff8111156118f157600080fd5b6118fd86828701611736565b909790965060209590950135949350505050565b60006020828403121561192357600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610b6060208301848661192a565b634e487b7160e01b600052601160045260246000fd5b60008161198c5761198c611967565b506000190190565b8082018082111561048557610485611967565b6080815260006119bb60808301878961192a565b6001600160a01b039586166020840152604083019490945250921660609092019190915292915050565b8183823760009101908152919050565b608081526000611a0960808301878961192a565b602083019590955250604081019290925260609091015292915050565b8181038181111561048557610485611967565b60005b83811015611a54578181015183820152602001611a3c565b50506000910152565b60008151808452611a75816020860160208601611a39565b601f01601f19169290920160200192915050565b606081526000611a9c6060830186611a5d565b60208301949094525060400152919050565b600060408284031215611ac057600080fd5b6040516040810181811067ffffffffffffffff82111715611ae357611ae36115b0565b604052825181526020928301519281019290925250919050565b606081526000611b1160608301868861192a565b6020830194909452506040015292915050565b600060208284031215611b3657600080fd5b815161051f8161177f565b60006040820185835260206040818501528185835260608501905060608660051b86010192508660005b87811015611bdb57868503605f190183528135368a9003601e19018112611b9157600080fd5b8901848101903567ffffffffffffffff811115611bad57600080fd5b803603821315611bbc57600080fd5b611bc787828461192a565b965050509183019190830190600101611b6b565b509298975050505050505050565b60006020808385031215611bfc57600080fd5b825167ffffffffffffffff80821115611c1457600080fd5b818501915085601f830112611c2857600080fd5b815181811115611c3a57611c3a6115b0565b8060051b611c498582016115c6565b9182528381018501918581019089841115611c6357600080fd5b86860192505b83831015611cdb57825185811115611c815760008081fd5b8601603f81018b13611c935760008081fd5b878101516040611ca561163e836115f7565b8281528d82848601011115611cba5760008081fd5b611cc9838c8301848701611a39565b85525050509186019190860190611c69565b9998505050505050505050565b60008251611cfa818460208701611a39565b630b999a5b60e21b920191825250600401919050565b6001600160a01b038581168252848116602083015283166040820152608060608201819052600090611d4490830184611a5d565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611d7657611d76611967565b5060010190565b60008251611d8f818460208701611a39565b9190910192915050565b60208152600061051f6020830184611a5d56fea2646970667358221220a859cef4c11d86262161e6264878ad695539fb4703955f967824f8ec2a1b7a3c64736f6c63430008110033";

type RegistrarControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RegistrarController__factory extends ContractFactory {
  constructor(...args: RegistrarControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _base: PromiseOrValue<string>,
    _prices: PromiseOrValue<string>,
    _reverseRegistrar: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RegistrarController> {
    return super.deploy(
      _base,
      _prices,
      _reverseRegistrar,
      overrides || {}
    ) as Promise<RegistrarController>;
  }
  override getDeployTransaction(
    _base: PromiseOrValue<string>,
    _prices: PromiseOrValue<string>,
    _reverseRegistrar: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _base,
      _prices,
      _reverseRegistrar,
      overrides || {}
    );
  }
  override attach(address: string): RegistrarController {
    return super.attach(address) as RegistrarController;
  }
  override connect(signer: Signer): RegistrarController__factory {
    return super.connect(signer) as RegistrarController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarControllerInterface {
    return new utils.Interface(_abi) as RegistrarControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RegistrarController {
    return new Contract(address, _abi, signerOrProvider) as RegistrarController;
  }
}
