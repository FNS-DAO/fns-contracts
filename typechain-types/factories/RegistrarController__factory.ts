/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RegistrarController,
  RegistrarControllerInterface,
} from "../RegistrarController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRegistrar",
        name: "_base",
        type: "address",
      },
      {
        internalType: "contract IPriceOracle",
        name: "_prices",
        type: "address",
      },
      {
        internalType: "contract IReverseRegistrar",
        name: "_reverseRegistrar",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "DurationTooShort",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExpirationTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNameLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRecipient",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NameNotAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "RegisterCountLimited",
    type: "error",
  },
  {
    inputs: [],
    name: "ResolverRequiredWhenDataSupplied",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldMinLen",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMinLen",
        type: "uint256",
      },
    ],
    name: "MinLengthUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRenewed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_REGISTRATION_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "base",
    outputs: [
      {
        internalType: "contract IRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxExpirationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minLengthAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "nameExpires",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prices",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "reverseRecord",
        type: "bool",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "remainRegisterable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "rentPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "base",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceOracle.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reverseRegistrar",
    outputs: [
      {
        internalType: "contract IReverseRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expTime",
        type: "uint256",
      },
    ],
    name: "setMaxExpirationTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minLen",
        type: "uint256",
      },
    ],
    name: "setMinLengthAvailable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPriceOracle",
        name: "_prices",
        type: "address",
      },
    ],
    name: "setPriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    name: "setRemainRegisterable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "valid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001d8138038062001d818339810160408190526200003491620000e6565b6200003f336200007d565b6001600160a01b03928316608052600180546001600160a01b031916928416929092179091551660a05260006002819055600380556004556200013a565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000e357600080fd5b50565b600080600060608486031215620000fc57600080fd5b83516200010981620000cd565b60208501519093506200011c81620000cd565b60408501519092506200012f81620000cd565b809150509250925092565b60805160a051611bf76200018a600039600081816102da0152610f9b015260008181610211015281816104ac015281816107ad015281816109d401528181610bc70152610d2a0152611bf76000f3fe6080604052600436106101405760003560e01c806380869853116100b6578063acf1a8411161006f578063acf1a841146103ac578063aeb8ce9b146103bf578063d3419bf3146103df578063f025ed88146103ff578063f2fde38b1461041f578063f541b3821461043f57600080fd5b806380869853146102c857806383e7f6ff146102fc5780638a95b09f146103375780638da5cb5b1461034e5780639791c0971461036c578063a10fe45b1461038c57600080fd5b80635001f3b5116101085780635001f3b5146101ff57806351cff8d91461024b578063530e784f1461026b5780635692a2cf1461028b5780636d23abcb1461029e578063715018a6146102b357600080fd5b806301ffc9a71461014557806305457b3d1461017a5780632af895ed146101a857806340223872146101bd57806344004cc1146101df575b600080fd5b34801561015157600080fd5b5061016561016036600461139b565b610454565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b5061019a61019536600461148a565b61048b565b604051908152602001610171565b3480156101b457600080fd5b5060035461019a565b3480156101c957600080fd5b506101dd6101d83660046114bf565b610526565b005b3480156101eb57600080fd5b506101dd6101fa3660046114ed565b610533565b34801561020b57600080fd5b506102337f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610171565b34801561025757600080fd5b506101dd61026636600461152e565b61057b565b34801561027757600080fd5b506101dd61028636600461152e565b6105e3565b6101dd6102993660046115b2565b61060d565b3480156102aa57600080fd5b5060045461019a565b3480156102bf57600080fd5b506101dd610978565b3480156102d457600080fd5b506102337f000000000000000000000000000000000000000000000000000000000000000081565b34801561030857600080fd5b5061031c610317366004611695565b61098c565b60408051825181526020928301519281019290925201610171565b34801561034357600080fd5b5061019a6224ea0081565b34801561035a57600080fd5b506000546001600160a01b0316610233565b34801561037857600080fd5b5061016561038736600461148a565b610aa6565b34801561039857600080fd5b506101dd6103a73660046114bf565b610abc565b6101dd6103ba3660046116da565b610b27565b3480156103cb57600080fd5b506101656103da36600461148a565b610cfa565b3480156103eb57600080fd5b50600154610233906001600160a01b031681565b34801561040b57600080fd5b506101dd61041a3660046114bf565b610d9d565b34801561042b57600080fd5b506101dd61043a36600461152e565b610daa565b34801561044b57600080fd5b5060025461019a565b60006001600160e01b031982166301ffc9a760e01b148061048557506001600160e01b03198216633ddc813960e21b145b92915050565b80516020820120604051636b727d4360e11b815260048101829052600091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d6e4fa8690602401602060405180830381865afa1580156104fb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190611726565b9392505050565b61052e610e23565b600255565b61053b610e23565b6001600160a01b03821661056257604051634e46966960e11b815260040160405180910390fd5b6105766001600160a01b0384168383610e7d565b505050565b610583610e23565b6001600160a01b0381166105aa57604051634e46966960e11b815260040160405180910390fd5b6040516001600160a01b038216904780156108fc02916000818181858888f193505050501580156105df573d6000803e3d6000fd5b5050565b6105eb610e23565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61064c88888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610cfa92505050565b6106765787876040516308eee0fd60e31b815260040161066d929190611768565b60405180910390fd5b6224ea0085101561069d57604051639a71997b60e01b81526004810186905260240161066d565b81158015906106b357506001600160a01b038416155b156106d1576040516334fd817160e21b815260040160405180910390fd5b6004546000036106f45760405163d25e6a2f60e01b815260040160405180910390fd5b60001960045414610715576004805490600061070f83611792565b91905055505b600061075889898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a925061098c915050565b905060008160200151826000015161077091906117a9565b9050803410156107935760405163044044a560e21b815260040160405180910390fd5b60405163382ab79560e21b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e0aade54906107ea908e908e908e908e908e906004016117bc565b6020604051808303816000875af1158015610809573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082d9190611726565b90506000600254118015610842575060025481115b15610860576040516308e8b93760e01b815260040160405180910390fd5b60008b8b6040516108729291906117fa565b6040519081900390209050851561088f5761088f88828989610ecf565b84156108d8576108d88c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c9250339150610f999050565b896001600160a01b0316817f69e37f151eb98a09618ddaa80c8cfaf1ce5996867c489f45b555b412271ebf278e8e886000015189602001518860405161092295949392919061180a565b60405180910390a38234111561096a57336108fc610940853461183b565b6040518115909202916000818181858888f19350505050158015610968573d6000803e3d6000fd5b505b505050505050505050505050565b610980610e23565b61098a6000611053565b565b604080518082019091526000808252602082015282516020840120600154604051636b727d4360e11b8152600481018390526001600160a01b03918216916350e9a7159187917f0000000000000000000000000000000000000000000000000000000000000000169063d6e4fa8690602401602060405180830381865afa158015610a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3f9190611726565b866040518463ffffffff1660e01b8152600401610a5e9392919061189e565b6040805180830381865afa158015610a7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9e91906118c3565b949350505050565b6000600354610ab4836110a3565b101592915050565b610ac4610e23565b6001811015610ae657604051631ae3550b60e01b815260040160405180910390fd5b60035460408051918252602082018390527f75448b63a1b5ac75d751483e6b667f38326c69d3954a66da039fed5e6e0c789b910160405180910390a1600355565b6000610b6a84848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525086925061098c915050565b8051909150341015610b8f5760405163044044a560e21b815260040160405180910390fd5b6000808585604051610ba29291906117fa565b60405190819003812063c475abff60e01b8252600482018190526024820186905291507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c475abff906044016020604051808303816000875af1158015610c18573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c3c9190611726565b91506000600254118015610c51575060025482115b15610c6f576040516308e8b93760e01b815260040160405180910390fd5b8251341115610cb457825133906108fc90610c8a903461183b565b6040518115909202916000818181858888f19350505050158015610cb2573d6000803e3d6000fd5b505b807f3da24c024582931cfaf8267d8ed24d13a82a8068d5bd337d30ec45cea4e506ae87873486604051610cea9493929190611912565b60405180910390a2505050505050565b80516020820120600090610d0d83610aa6565b801561051f57506040516312dc929d60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396e494e890602401602060405180830381865afa158015610d79573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061051f9190611939565b610da5610e23565b600455565b610db2610e23565b6001600160a01b038116610e175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161066d565b610e2081611053565b50565b6000546001600160a01b0316331461098a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161066d565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b1790526105769084906111a6565b604080517f78f6b1389af563cc5c91f234ea46b055e49658d8b999eeb9e0baef7dbbc93fdb6020808301919091528183018690528251808303840181526060830193849052805191012063e32954eb60e01b90925285906001600160a01b0382169063e32954eb90610f4990859088908890606401611956565b6000604051808303816000875af1158015610f68573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610f9091908101906119fe565b50505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637a806d6b33838587604051602001610fdc9190611afd565b6040516020818303038152906040526040518563ffffffff1660e01b815260040161100a9493929190611b25565b6020604051808303816000875af1158015611029573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104d9190611726565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051600090819081905b8082101561119d5760008583815181106110c9576110c9611b63565b01602001516001600160f81b0319169050600160ff1b8110156110f8576110f16001846117a9565b925061118a565b600760fd1b6001600160f81b031982161015611119576110f16002846117a9565b600f60fc1b6001600160f81b03198216101561113a576110f16003846117a9565b601f60fb1b6001600160f81b03198216101561115b576110f16004846117a9565b603f60fa1b6001600160f81b03198216101561117c576110f16005846117a9565b6111876006846117a9565b92505b508261119581611b79565b9350506110ad565b50909392505050565b60006111fb826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166112789092919063ffffffff16565b80519091501561057657808060200190518101906112199190611939565b6105765760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161066d565b6060610a9e848460008585600080866001600160a01b0316858760405161129f9190611b92565b60006040518083038185875af1925050503d80600081146112dc576040519150601f19603f3d011682016040523d82523d6000602084013e6112e1565b606091505b50915091506112f2878383876112fd565b979650505050505050565b6060831561136c578251600003611365576001600160a01b0385163b6113655760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161066d565b5081610a9e565b610a9e83838151156113815781518083602001fd5b8060405162461bcd60e51b815260040161066d9190611bae565b6000602082840312156113ad57600080fd5b81356001600160e01b03198116811461051f57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611404576114046113c5565b604052919050565b600067ffffffffffffffff821115611426576114266113c5565b50601f01601f191660200190565b600082601f83011261144557600080fd5b81356114586114538261140c565b6113db565b81815284602083860101111561146d57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561149c57600080fd5b813567ffffffffffffffff8111156114b357600080fd5b610a9e84828501611434565b6000602082840312156114d157600080fd5b5035919050565b6001600160a01b0381168114610e2057600080fd5b60008060006060848603121561150257600080fd5b833561150d816114d8565b9250602084013561151d816114d8565b929592945050506040919091013590565b60006020828403121561154057600080fd5b813561051f816114d8565b60008083601f84011261155d57600080fd5b50813567ffffffffffffffff81111561157557600080fd5b60208301915083602082850101111561158d57600080fd5b9250929050565b8015158114610e2057600080fd5b80356115ad81611594565b919050565b60008060008060008060008060c0898b0312156115ce57600080fd5b883567ffffffffffffffff808211156115e657600080fd5b6115f28c838d0161154b565b909a50985060208b01359150611607826114d8565b90965060408a0135955060608a013590611620826114d8565b90945060808a0135908082111561163657600080fd5b818b0191508b601f83011261164a57600080fd5b81358181111561165957600080fd5b8c60208260051b850101111561166e57600080fd5b60208301955080945050505061168660a08a016115a2565b90509295985092959890939650565b600080604083850312156116a857600080fd5b823567ffffffffffffffff8111156116bf57600080fd5b6116cb85828601611434565b95602094909401359450505050565b6000806000604084860312156116ef57600080fd5b833567ffffffffffffffff81111561170657600080fd5b6117128682870161154b565b909790965060209590950135949350505050565b60006020828403121561173857600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610a9e60208301848661173f565b634e487b7160e01b600052601160045260246000fd5b6000816117a1576117a161177c565b506000190190565b808201808211156104855761048561177c565b6080815260006117d060808301878961173f565b6001600160a01b039586166020840152604083019490945250921660609092019190915292915050565b8183823760009101908152919050565b60808152600061181e60808301878961173f565b602083019590955250604081019290925260609091015292915050565b818103818111156104855761048561177c565b60005b83811015611869578181015183820152602001611851565b50506000910152565b6000815180845261188a81602086016020860161184e565b601f01601f19169290920160200192915050565b6060815260006118b16060830186611872565b60208301949094525060400152919050565b6000604082840312156118d557600080fd5b6040516040810181811067ffffffffffffffff821117156118f8576118f86113c5565b604052825181526020928301519281019290925250919050565b60608152600061192660608301868861173f565b6020830194909452506040015292915050565b60006020828403121561194b57600080fd5b815161051f81611594565b60006040820185835260206040818501528185835260608501905060608660051b86010192508660005b878110156119f057868503605f190183528135368a9003601e190181126119a657600080fd5b8901848101903567ffffffffffffffff8111156119c257600080fd5b8036038213156119d157600080fd5b6119dc87828461173f565b965050509183019190830190600101611980565b509298975050505050505050565b60006020808385031215611a1157600080fd5b825167ffffffffffffffff80821115611a2957600080fd5b818501915085601f830112611a3d57600080fd5b815181811115611a4f57611a4f6113c5565b8060051b611a5e8582016113db565b9182528381018501918581019089841115611a7857600080fd5b86860192505b83831015611af057825185811115611a965760008081fd5b8601603f81018b13611aa85760008081fd5b878101516040611aba6114538361140c565b8281528d82848601011115611acf5760008081fd5b611ade838c830184870161184e565b85525050509186019190860190611a7e565b9998505050505050505050565b60008251611b0f81846020870161184e565b630b999a5b60e21b920191825250600401919050565b6001600160a01b038581168252848116602083015283166040820152608060608201819052600090611b5990830184611872565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611b8b57611b8b61177c565b5060010190565b60008251611ba481846020870161184e565b9190910192915050565b60208152600061051f602083018461187256fea2646970667358221220eacc0ae88e373b5a5d6e72bf687d8fa369c28b31abd4e4a8bf2a131d73f87fee64736f6c63430008110033";

type RegistrarControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RegistrarController__factory extends ContractFactory {
  constructor(...args: RegistrarControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _base: PromiseOrValue<string>,
    _prices: PromiseOrValue<string>,
    _reverseRegistrar: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RegistrarController> {
    return super.deploy(
      _base,
      _prices,
      _reverseRegistrar,
      overrides || {}
    ) as Promise<RegistrarController>;
  }
  override getDeployTransaction(
    _base: PromiseOrValue<string>,
    _prices: PromiseOrValue<string>,
    _reverseRegistrar: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _base,
      _prices,
      _reverseRegistrar,
      overrides || {}
    );
  }
  override attach(address: string): RegistrarController {
    return super.attach(address) as RegistrarController;
  }
  override connect(signer: Signer): RegistrarController__factory {
    return super.connect(signer) as RegistrarController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarControllerInterface {
    return new utils.Interface(_abi) as RegistrarControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RegistrarController {
    return new Contract(address, _abi, signerOrProvider) as RegistrarController;
  }
}
