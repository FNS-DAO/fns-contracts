/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  RegistrarController,
  RegistrarControllerInterface,
} from "../RegistrarController";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IRegistrar",
        name: "_base",
        type: "address",
      },
      {
        internalType: "contract IPriceOracle",
        name: "_prices",
        type: "address",
      },
      {
        internalType: "contract IReverseRegistrar",
        name: "_reverseRegistrar",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "DurationTooShort",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientValue",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidExpirationTime",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidNameLength",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidRecipient",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "NameNotAvailable",
    type: "error",
  },
  {
    inputs: [],
    name: "ResolverRequiredWhenDataSupplied",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldMinLen",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newMinLen",
        type: "uint256",
      },
    ],
    name: "MinLengthUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseCost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "premium",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "label",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "cost",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRenewed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "MIN_REGISTRATION_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "base",
    outputs: [
      {
        internalType: "contract IRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxExpirationTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minLengthAvailable",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "nameExpires",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "prices",
    outputs: [
      {
        internalType: "contract IPriceOracle",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
      {
        internalType: "bytes[]",
        name: "data",
        type: "bytes[]",
      },
      {
        internalType: "bool",
        name: "reverseRecord",
        type: "bool",
      },
    ],
    name: "register",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "renew",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "rentPrice",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "base",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "premium",
            type: "uint256",
          },
        ],
        internalType: "struct IPriceOracle.Price",
        name: "price",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reverseRegistrar",
    outputs: [
      {
        internalType: "contract IReverseRegistrar",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "expTime",
        type: "uint256",
      },
    ],
    name: "setMaxExpirationTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minLen",
        type: "uint256",
      },
    ],
    name: "setMinLengthAvailable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPriceOracle",
        name: "_prices",
        type: "address",
      },
    ],
    name: "setPriceOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceID",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
    ],
    name: "valid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001cc938038062001cc98339810160408190526200003491620000e1565b6200003f3362000078565b6001600160a01b03928316608052600180546001600160a01b031916928416929092179091551660a05260006002556003805562000135565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b0381168114620000de57600080fd5b50565b600080600060608486031215620000f757600080fd5b83516200010481620000c8565b60208501519093506200011781620000c8565b60408501519092506200012a81620000c8565b809150509250925092565b60805160a051611b4462000185600039600081816102af0152610eff0152600081816101fb015281816104610152818161071e0152818161094501528181610b380152610c9b0152611b446000f3fe60806040526004361061012a5760003560e01c806380869853116100ab578063a10fe45b1161006f578063a10fe45b14610361578063acf1a84114610381578063aeb8ce9b14610394578063d3419bf3146103b4578063f2fde38b146103d4578063f541b382146103f457600080fd5b8063808698531461029d57806383e7f6ff146102d15780638a95b09f1461030c5780638da5cb5b146103235780639791c0971461034157600080fd5b80635001f3b5116100f25780635001f3b5146101e957806351cff8d914610235578063530e784f146102555780635692a2cf14610275578063715018a61461028857600080fd5b806301ffc9a71461012f57806305457b3d146101645780632af895ed1461019257806340223872146101a757806344004cc1146101c9575b600080fd5b34801561013b57600080fd5b5061014f61014a3660046112ff565b610409565b60405190151581526020015b60405180910390f35b34801561017057600080fd5b5061018461017f3660046113ee565b610440565b60405190815260200161015b565b34801561019e57600080fd5b50600354610184565b3480156101b357600080fd5b506101c76101c2366004611423565b6104db565b005b3480156101d557600080fd5b506101c76101e4366004611451565b6104e8565b3480156101f557600080fd5b5061021d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161015b565b34801561024157600080fd5b506101c7610250366004611492565b610530565b34801561026157600080fd5b506101c7610270366004611492565b610598565b6101c7610283366004611516565b6105c2565b34801561029457600080fd5b506101c76108e9565b3480156102a957600080fd5b5061021d7f000000000000000000000000000000000000000000000000000000000000000081565b3480156102dd57600080fd5b506102f16102ec3660046115f9565b6108fd565b6040805182518152602092830151928101929092520161015b565b34801561031857600080fd5b506101846224ea0081565b34801561032f57600080fd5b506000546001600160a01b031661021d565b34801561034d57600080fd5b5061014f61035c3660046113ee565b610a17565b34801561036d57600080fd5b506101c761037c366004611423565b610a2d565b6101c761038f36600461163e565b610a98565b3480156103a057600080fd5b5061014f6103af3660046113ee565b610c6b565b3480156103c057600080fd5b5060015461021d906001600160a01b031681565b3480156103e057600080fd5b506101c76103ef366004611492565b610d0e565b34801561040057600080fd5b50600254610184565b60006001600160e01b031982166301ffc9a760e01b148061043a57506001600160e01b03198216639a51af2f60e01b145b92915050565b80516020820120604051636b727d4360e11b815260048101829052600091907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063d6e4fa8690602401602060405180830381865afa1580156104b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d4919061168a565b9392505050565b6104e3610d87565b600255565b6104f0610d87565b6001600160a01b03821661051757604051634e46966960e11b815260040160405180910390fd5b61052b6001600160a01b0384168383610de1565b505050565b610538610d87565b6001600160a01b03811661055f57604051634e46966960e11b815260040160405180910390fd5b6040516001600160a01b038216904780156108fc02916000818181858888f19350505050158015610594573d6000803e3d6000fd5b5050565b6105a0610d87565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61060188888080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610c6b92505050565b61062b5787876040516308eee0fd60e31b81526004016106229291906116cc565b60405180910390fd5b6224ea0085101561065257604051639a71997b60e01b815260048101869052602401610622565b811580159061066857506001600160a01b038416155b15610686576040516334fd817160e21b815260040160405180910390fd5b60006106c989898080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508a92506108fd915050565b90506000816020015182600001516106e191906116f6565b9050803410156107045760405163044044a560e21b815260040160405180910390fd5b60405163382ab79560e21b81526000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e0aade549061075b908e908e908e908e908e90600401611709565b6020604051808303816000875af115801561077a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079e919061168a565b905060006002541180156107b3575060025481115b156107d1576040516308e8b93760e01b815260040160405180910390fd5b60008b8b6040516107e3929190611747565b604051908190039020905085156108005761080088828989610e33565b8415610849576108498c8c8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508c9250339150610efd9050565b896001600160a01b0316817f69e37f151eb98a09618ddaa80c8cfaf1ce5996867c489f45b555b412271ebf278e8e8860000151896020015188604051610893959493929190611757565b60405180910390a3823411156108db57336108fc6108b18534611788565b6040518115909202916000818181858888f193505050501580156108d9573d6000803e3d6000fd5b505b505050505050505050505050565b6108f1610d87565b6108fb6000610fb7565b565b604080518082019091526000808252602082015282516020840120600154604051636b727d4360e11b8152600481018390526001600160a01b03918216916350e9a7159187917f0000000000000000000000000000000000000000000000000000000000000000169063d6e4fa8690602401602060405180830381865afa15801561098c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109b0919061168a565b866040518463ffffffff1660e01b81526004016109cf939291906117eb565b6040805180830381865afa1580156109eb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0f9190611810565b949350505050565b6000600354610a2583611007565b101592915050565b610a35610d87565b6001811015610a5757604051631ae3550b60e01b815260040160405180910390fd5b60035460408051918252602082018390527f75448b63a1b5ac75d751483e6b667f38326c69d3954a66da039fed5e6e0c789b910160405180910390a1600355565b6000610adb84848080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508692506108fd915050565b8051909150341015610b005760405163044044a560e21b815260040160405180910390fd5b6000808585604051610b13929190611747565b60405190819003812063c475abff60e01b8252600482018190526024820186905291507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c475abff906044016020604051808303816000875af1158015610b89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bad919061168a565b91506000600254118015610bc2575060025482115b15610be0576040516308e8b93760e01b815260040160405180910390fd5b8251341115610c2557825133906108fc90610bfb9034611788565b6040518115909202916000818181858888f19350505050158015610c23573d6000803e3d6000fd5b505b807f3da24c024582931cfaf8267d8ed24d13a82a8068d5bd337d30ec45cea4e506ae87873486604051610c5b949392919061185f565b60405180910390a2505050505050565b80516020820120600090610c7e83610a17565b80156104d457506040516312dc929d60e31b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906396e494e890602401602060405180830381865afa158015610cea573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d49190611886565b610d16610d87565b6001600160a01b038116610d7b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610622565b610d8481610fb7565b50565b6000546001600160a01b031633146108fb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610622565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261052b90849061110a565b604080517f78f6b1389af563cc5c91f234ea46b055e49658d8b999eeb9e0baef7dbbc93fdb6020808301919091528183018690528251808303840181526060830193849052805191012063e32954eb60e01b90925285906001600160a01b0382169063e32954eb90610ead908590889088906064016118a3565b6000604051808303816000875af1158015610ecc573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610ef4919081019061194b565b50505050505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637a806d6b33838587604051602001610f409190611a4a565b6040516020818303038152906040526040518563ffffffff1660e01b8152600401610f6e9493929190611a72565b6020604051808303816000875af1158015610f8d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fb1919061168a565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051600090819081905b8082101561110157600085838151811061102d5761102d611ab0565b01602001516001600160f81b0319169050600160ff1b81101561105c576110556001846116f6565b92506110ee565b600760fd1b6001600160f81b03198216101561107d576110556002846116f6565b600f60fc1b6001600160f81b03198216101561109e576110556003846116f6565b601f60fb1b6001600160f81b0319821610156110bf576110556004846116f6565b603f60fa1b6001600160f81b0319821610156110e0576110556005846116f6565b6110eb6006846116f6565b92505b50826110f981611ac6565b935050611011565b50909392505050565b600061115f826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111dc9092919063ffffffff16565b80519091501561052b578080602001905181019061117d9190611886565b61052b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610622565b6060610a0f848460008585600080866001600160a01b031685876040516112039190611adf565b60006040518083038185875af1925050503d8060008114611240576040519150601f19603f3d011682016040523d82523d6000602084013e611245565b606091505b509150915061125687838387611261565b979650505050505050565b606083156112d05782516000036112c9576001600160a01b0385163b6112c95760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610622565b5081610a0f565b610a0f83838151156112e55781518083602001fd5b8060405162461bcd60e51b81526004016106229190611afb565b60006020828403121561131157600080fd5b81356001600160e01b0319811681146104d457600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561136857611368611329565b604052919050565b600067ffffffffffffffff82111561138a5761138a611329565b50601f01601f191660200190565b600082601f8301126113a957600080fd5b81356113bc6113b782611370565b61133f565b8181528460208386010111156113d157600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561140057600080fd5b813567ffffffffffffffff81111561141757600080fd5b610a0f84828501611398565b60006020828403121561143557600080fd5b5035919050565b6001600160a01b0381168114610d8457600080fd5b60008060006060848603121561146657600080fd5b83356114718161143c565b925060208401356114818161143c565b929592945050506040919091013590565b6000602082840312156114a457600080fd5b81356104d48161143c565b60008083601f8401126114c157600080fd5b50813567ffffffffffffffff8111156114d957600080fd5b6020830191508360208285010111156114f157600080fd5b9250929050565b8015158114610d8457600080fd5b8035611511816114f8565b919050565b60008060008060008060008060c0898b03121561153257600080fd5b883567ffffffffffffffff8082111561154a57600080fd5b6115568c838d016114af565b909a50985060208b0135915061156b8261143c565b90965060408a0135955060608a0135906115848261143c565b90945060808a0135908082111561159a57600080fd5b818b0191508b601f8301126115ae57600080fd5b8135818111156115bd57600080fd5b8c60208260051b85010111156115d257600080fd5b6020830195508094505050506115ea60a08a01611506565b90509295985092959890939650565b6000806040838503121561160c57600080fd5b823567ffffffffffffffff81111561162357600080fd5b61162f85828601611398565b95602094909401359450505050565b60008060006040848603121561165357600080fd5b833567ffffffffffffffff81111561166a57600080fd5b611676868287016114af565b909790965060209590950135949350505050565b60006020828403121561169c57600080fd5b5051919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b602081526000610a0f6020830184866116a3565b634e487b7160e01b600052601160045260246000fd5b8082018082111561043a5761043a6116e0565b60808152600061171d6080830187896116a3565b6001600160a01b039586166020840152604083019490945250921660609092019190915292915050565b8183823760009101908152919050565b60808152600061176b6080830187896116a3565b602083019590955250604081019290925260609091015292915050565b8181038181111561043a5761043a6116e0565b60005b838110156117b657818101518382015260200161179e565b50506000910152565b600081518084526117d781602086016020860161179b565b601f01601f19169290920160200192915050565b6060815260006117fe60608301866117bf565b60208301949094525060400152919050565b60006040828403121561182257600080fd5b6040516040810181811067ffffffffffffffff8211171561184557611845611329565b604052825181526020928301519281019290925250919050565b6060815260006118736060830186886116a3565b6020830194909452506040015292915050565b60006020828403121561189857600080fd5b81516104d4816114f8565b60006040820185835260206040818501528185835260608501905060608660051b86010192508660005b8781101561193d57868503605f190183528135368a9003601e190181126118f357600080fd5b8901848101903567ffffffffffffffff81111561190f57600080fd5b80360382131561191e57600080fd5b6119298782846116a3565b9650505091830191908301906001016118cd565b509298975050505050505050565b6000602080838503121561195e57600080fd5b825167ffffffffffffffff8082111561197657600080fd5b818501915085601f83011261198a57600080fd5b81518181111561199c5761199c611329565b8060051b6119ab85820161133f565b91825283810185019185810190898411156119c557600080fd5b86860192505b83831015611a3d578251858111156119e35760008081fd5b8601603f81018b136119f55760008081fd5b878101516040611a076113b783611370565b8281528d82848601011115611a1c5760008081fd5b611a2b838c830184870161179b565b855250505091860191908601906119cb565b9998505050505050505050565b60008251611a5c81846020870161179b565b630b999a5b60e21b920191825250600401919050565b6001600160a01b038581168252848116602083015283166040820152608060608201819052600090611aa6908301846117bf565b9695505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201611ad857611ad86116e0565b5060010190565b60008251611af181846020870161179b565b9190910192915050565b6020815260006104d460208301846117bf56fea26469706673582212205bbcc41ae4dcc5a5bc0f83d2808ede15779b6c243d96278a43cd423846567c4264736f6c63430008110033";

type RegistrarControllerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarControllerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RegistrarController__factory extends ContractFactory {
  constructor(...args: RegistrarControllerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _base: PromiseOrValue<string>,
    _prices: PromiseOrValue<string>,
    _reverseRegistrar: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<RegistrarController> {
    return super.deploy(
      _base,
      _prices,
      _reverseRegistrar,
      overrides || {}
    ) as Promise<RegistrarController>;
  }
  override getDeployTransaction(
    _base: PromiseOrValue<string>,
    _prices: PromiseOrValue<string>,
    _reverseRegistrar: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _base,
      _prices,
      _reverseRegistrar,
      overrides || {}
    );
  }
  override attach(address: string): RegistrarController {
    return super.attach(address) as RegistrarController;
  }
  override connect(signer: Signer): RegistrarController__factory {
    return super.connect(signer) as RegistrarController__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarControllerInterface {
    return new utils.Interface(_abi) as RegistrarControllerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RegistrarController {
    return new Contract(address, _abi, signerOrProvider) as RegistrarController;
  }
}
