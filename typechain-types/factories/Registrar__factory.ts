/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { Registrar, RegistrarInterface } from "../Registrar";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract FNS",
        name: "_fns",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_baseNode",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "ControllerAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "ControllerRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameMigrated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expires",
        type: "uint256",
      },
    ],
    name: "NameRenewed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "GRACE_PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "addController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "available",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseNode",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "controllers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "expiries",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fns",
    outputs: [
      {
        internalType: "contract FNS",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "getIdByNode",
    outputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "node",
        type: "bytes32",
      },
    ],
    name: "getNameByNode",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "nameExpires",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "nameOf",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "reclaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "register",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "registerOnly",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "removeController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "renew",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "baseURI",
        type: "string",
      },
    ],
    name: "setBaseURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "resolver",
        type: "address",
      },
    ],
    name: "setResolver",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002ce738038062002ce783398101604081905262000034916200011b565b604080518082018252600380825262464e5360e81b60208084018290528451808601909552918452908301529060006200006f8382620001fc565b5060016200007e8282620001fc565b5050506200009b62000095620000c560201b60201c565b620000c9565b600c80546001600160a01b0319166001600160a01b039390931692909217909155600d55620002c8565b3390565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080604083850312156200012f57600080fd5b82516001600160a01b03811681146200014757600080fd5b6020939093015192949293505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200018257607f821691505b602082108103620001a357634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001f757600081815260208120601f850160051c81016020861015620001d25750805b601f850160051c820191505b81811015620001f357828155600101620001de565b5050505b505050565b81516001600160401b0381111562000218576200021862000157565b62000230816200022984546200016d565b84620001a9565b602080601f8311600181146200026857600084156200024f5750858301515b600019600386901b1c1916600185901b178555620001f3565b600085815260208120601f198616915b82811015620002995788860151825594840194600190910190840162000278565b5085821015620002b85787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612a0f80620002d86000396000f3fe608060405234801561001057600080fd5b50600436106102275760003560e01c80638da5cb5b11610130578063c475abff116100b8578063e0aade541161007c578063e0aade54146104cc578063e374d738146104df578063e985e9c5146104f2578063f2fde38b1461052e578063f6a74ed71461054157600080fd5b8063c475abff1461045a578063c87b56dd1461046d578063d6e4fa8614610480578063da8c229e146104a0578063ddf7fcb0146104c357600080fd5b8063a7fc7a07116100ff578063a7fc7a07146103f7578063b382e4c51461040a578063b88d4fde1461041d578063b9cce32814610430578063c1a287e21461045057600080fd5b80638da5cb5b146103b857806395d89b41146103c957806396e494e8146103d1578063a22cb465146103e457600080fd5b8063293b2d4a116101b35780634f6ccce7116101825780634f6ccce71461036457806355f804b3146103775780636352211e1461038a57806370a082311461039d578063715018a6146103b057600080fd5b8063293b2d4a1461030b5780632f745c591461032b57806342842e0e1461033e5780634e543b261461035157600080fd5b8063095ea7b3116101fa578063095ea7b3146102a757806309b0eb4c146102bc57806318160ddd146102dd57806323b872dd146102e557806328ed4f6c146102f857600080fd5b806301ffc9a71461022c578063051a26641461025457806306fdde0314610274578063081812fc1461027c575b600080fd5b61023f61023a36600461222c565b610554565b60405190151581526020015b60405180910390f35b610267610262366004612249565b61057f565b60405161024b91906122b2565b610267610621565b61028f61028a366004612249565b6106b3565b6040516001600160a01b03909116815260200161024b565b6102ba6102b53660046122da565b6106da565b005b6102cf6102ca36600461234f565b6107f4565b60405190815260200161024b565b6008546102cf565b6102ba6102f33660046123ac565b6108e7565b6102ba6103063660046123ed565b610918565b6102cf610319366004612249565b60009081526010602052604090205490565b6102cf6103393660046122da565b610a60565b6102ba61034c3660046123ac565b610af6565b6102ba61035f36600461241d565b610b11565b6102cf610372366004612249565b610b86565b6102ba6103853660046124c6565b610c19565b61028f610398366004612249565b610c31565b6102cf6103ab36600461241d565b610c54565b6102ba610cda565b600a546001600160a01b031661028f565b610267610cee565b61023f6103df366004612249565b610cfd565b6102ba6103f236600461250f565b610d23565b6102ba61040536600461241d565b610d2e565b600c5461028f906001600160a01b031681565b6102ba61042b366004612542565b610d82565b6102cf61043e366004612249565b600b6020526000908152604090205481565b6102cf6276a70081565b6102cf6104683660046125c2565b610dba565b61026761047b366004612249565b610fb2565b6102cf61048e366004612249565b6000908152600b602052604090205490565b61023f6104ae36600461241d565b600e6020526000908152604090205460ff1681565b6102cf600d5481565b6102cf6104da3660046125e4565b611019565b6102676104ed366004612249565b611111565b61023f610500366004612658565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102ba61053c36600461241d565b61113b565b6102ba61054f36600461241d565b6111b4565b60006001600160e01b0319821663836788bf60e01b1480610579575061057982611205565b92915050565b6000818152600f6020526040902080546060919061059c90612686565b80601f01602080910402602001604051908101604052809291908181526020018280546105c890612686565b80156106155780601f106105ea57610100808354040283529160200191610615565b820191906000526020600020905b8154815290600101906020018083116105f857829003601f168201915b50505050509050919050565b60606000805461063090612686565b80601f016020809104026020016040519081016040528092919081815260200182805461065c90612686565b80156106a95780601f1061067e576101008083540402835291602001916106a9565b820191906000526020600020905b81548152906001019060200180831161068c57829003601f168201915b5050505050905090565b60006106be8261122a565b506000908152600460205260409020546001600160a01b031690565b60006106e582611289565b9050806001600160a01b0316836001600160a01b0316036107575760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061077357506107738133610500565b6107e55760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161074e565b6107ef83836112e9565b505050565b600c54600d546040516302571be360e01b8152600481019190915260009130916001600160a01b03909116906302571be390602401602060405180830381865afa158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a91906126c0565b6001600160a01b03161461087d57600080fd5b336000908152600e602052604090205460ff1661089957600080fd5b6108dc85858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250889350879250905080611357565b90505b949350505050565b6108f13382611628565b61090d5760405162461bcd60e51b815260040161074e906126dd565b6107ef8383836116a3565b600c54600d546040516302571be360e01b8152600481019190915230916001600160a01b0316906302571be390602401602060405180830381865afa158015610965573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098991906126c0565b6001600160a01b03161461099c57600080fd5b6109a63383611628565b6109de5760405162461bcd60e51b81526020600482015260096024820152683337b93134b23232b760b91b604482015260640161074e565b600c54600d546040516306ab592360e01b81526004810191909152602481018490526001600160a01b038381166044830152909116906306ab5923906064016020604051808303816000875af1158015610a3c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ef919061272a565b6000610a6b83610c54565b8210610acd5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b606482015260840161074e565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b6107ef83838360405180602001604052806000815250610d82565b610b19611814565b600c54600d54604051630c4b7b8560e11b815260048101919091526001600160a01b03838116602483015290911690631896f70a90604401600060405180830381600087803b158015610b6b57600080fd5b505af1158015610b7f573d6000803e3d6000fd5b5050505050565b6000610b9160085490565b8210610bf45760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b606482015260840161074e565b60088281548110610c0757610c07612743565b90600052602060002001549050919050565b610c21611814565b6011610c2d82826127a7565b5050565b6000818152600b60205260408120544210610c4b57600080fd5b61057982611289565b60006001600160a01b038216610cbe5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161074e565b506001600160a01b031660009081526003602052604090205490565b610ce2611814565b610cec600061186e565b565b60606001805461063090612686565b6000818152600b60205260408120544290610d1c906276a7009061287d565b1092915050565b610c2d3383836118c0565b610d36611814565b6001600160a01b0381166000818152600e6020526040808220805460ff19166001179055517f0a8bb31534c0ed46f380cb867bd5c803a189ced9a764e30b3a4991a9901d74749190a250565b610d8c3383611628565b610da85760405162461bcd60e51b815260040161074e906126dd565b610db48484848461198e565b50505050565b600c54600d546040516302571be360e01b8152600481019190915260009130916001600160a01b03909116906302571be390602401602060405180830381865afa158015610e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3091906126c0565b6001600160a01b031614610e4357600080fd5b336000908152600e602052604090205460ff16610e5f57600080fd5b6000838152600b60205260409020544290610e7e906276a7009061287d565b1015610ebb5760405162461bcd60e51b815260206004820152600c60248201526b19dc9858d9481c195c9a5bd960a21b604482015260640161074e565b610ec86276a7008361287d565b6000848152600b60205260409020546276a70090610ee790859061287d565b610ef1919061287d565b11610f305760405162461bcd60e51b815260206004820152600f60248201526e667574757265206f766572666c6f7760881b604482015260640161074e565b6000838152600b602052604081208054849290610f4e90849061287d565b90915550506000838152600b60205260409081902054905184917f9b87a00e30f1ac65d898f070f8a3488fe60517182d0a2098e1b4b93a54aa9bd691610f9691815260200190565b60405180910390a250506000908152600b602052604090205490565b6060610fbd8261122a565b6000610fc76119c1565b90506000815111610fe75760405180602001604052806000815250611012565b80610ff1846119d0565b604051602001611002929190612890565b6040516020818303038152906040525b9392505050565b600c54600d546040516302571be360e01b8152600481019190915260009130916001600160a01b03909116906302571be390602401602060405180830381865afa15801561106b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061108f91906126c0565b6001600160a01b0316146110a257600080fd5b336000908152600e602052604090205460ff166110be57600080fd5b600061110687878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508992508891506001905087611357565b979650505050505050565b6000818152601060209081526040808320548352600f909152902080546060919061059c90612686565b611143611814565b6001600160a01b0381166111a85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161074e565b6111b18161186e565b50565b6111bc611814565b6001600160a01b0381166000818152600e6020526040808220805460ff19169055517f33d83959be2573f5453b12eb9d43b3499bc57d96bd2f067ba44803c859e811139190a250565b60006001600160e01b0319821663780e9d6360e01b1480610579575061057982611a63565b6000818152600260205260409020546001600160a01b03166111b15760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161074e565b6000818152600260205260408120546001600160a01b0316806105795760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161074e565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061131e82611289565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b8451602086012060009061136a81610cfd565b6113a65760405162461bcd60e51b815260206004820152600d60248201526c6e6f7420617661696c61626c6560981b604482015260640161074e565b6113b36276a7004261287d565b6276a7006113c1874261287d565b6113cb919061287d565b116114075760405162461bcd60e51b815260206004820152600c60248201526b19dc9858d9481c195c9a5bd960a21b604482015260640161074e565b611411854261287d565b6000828152600b60209081526040808320939093556002905220546001600160a01b0316156114435761144381611ab3565b61144d8682611b56565b6000818152600f6020526040902061146588826127a7565b50600d54604051600091611486918490602001918252602082015260400190565b60408051601f198184030181529181528151602092830120600081815260109093529120839055905084156115cb57600c54600d546040516306ab592360e01b81526004810191909152602481018490526001600160a01b038981166044830152909116906306ab5923906064016020604051808303816000875af1158015611513573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611537919061272a565b506001600160a01b038416156115cb57600c54600d54604051630cba6ee560e01b81526004810191909152602481018490526001600160a01b03868116604483015290911690630cba6ee5906064016020604051808303816000875af11580156115a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115c9919061272a565b505b6001600160a01b038716827fb3d987963d01b2f68493b4bdb130988f157ea43070d4ad840fee0466ed9370d9611601894261287d565b60405190815260200160405180910390a361161c864261287d565b98975050505050505050565b60008061163483610c31565b9050806001600160a01b0316846001600160a01b0316148061166f5750836001600160a01b0316611664846106b3565b6001600160a01b0316145b806108df57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff166108df565b826001600160a01b03166116b682611289565b6001600160a01b0316146116dc5760405162461bcd60e51b815260040161074e906128bf565b6001600160a01b03821661173e5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161074e565b61174b8383836001611cef565b826001600160a01b031661175e82611289565b6001600160a01b0316146117845760405162461bcd60e51b815260040161074e906128bf565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600a546001600160a01b03163314610cec5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161074e565b600a80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036119215760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161074e565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6119998484846116a3565b6119a584848484611e28565b610db45760405162461bcd60e51b815260040161074e90612904565b60606011805461063090612686565b606060006119dd83611f26565b600101905060008167ffffffffffffffff8111156119fd576119fd61243a565b6040519080825280601f01601f191660200182016040528015611a27576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611a3157509392505050565b60006001600160e01b031982166380ac58cd60e01b1480611a9457506001600160e01b03198216635b5e139f60e01b145b8061057957506301ffc9a760e01b6001600160e01b0319831614610579565b6000611abe82611289565b9050611ace816000846001611cef565b611ad782611289565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6001600160a01b038216611bac5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161074e565b6000818152600260205260409020546001600160a01b031615611c115760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161074e565b611c1f600083836001611cef565b6000818152600260205260409020546001600160a01b031615611c845760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161074e565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b611cfb84848484611ffe565b6001811115611d6a5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b606482015260840161074e565b816001600160a01b038516611dc657611dc181600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b611de9565b836001600160a01b0316856001600160a01b031614611de957611de98582612086565b6001600160a01b038416611e0557611e0081612123565b610b7f565b846001600160a01b0316846001600160a01b031614610b7f57610b7f84826121d2565b60006001600160a01b0384163b15611f1e57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611e6c903390899088908890600401612956565b6020604051808303816000875af1925050508015611ea7575060408051601f3d908101601f19168201909252611ea491810190612993565b60015b611f04573d808015611ed5576040519150601f19603f3d011682016040523d82523d6000602084013e611eda565b606091505b508051600003611efc5760405162461bcd60e51b815260040161074e90612904565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108df565b5060016108df565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310611f655772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310611f91576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310611faf57662386f26fc10000830492506010015b6305f5e1008310611fc7576305f5e100830492506008015b6127108310611fdb57612710830492506004015b60648310611fed576064830492506002015b600a83106105795760010192915050565b6001811115610db4576001600160a01b03841615612044576001600160a01b0384166000908152600360205260408120805483929061203e9084906129b0565b90915550505b6001600160a01b03831615610db4576001600160a01b0383166000908152600360205260408120805483929061207b90849061287d565b909155505050505050565b6000600161209384610c54565b61209d91906129b0565b6000838152600760205260409020549091508082146120f0576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090612135906001906129b0565b6000838152600960205260408120546008805493945090928490811061215d5761215d612743565b90600052602060002001549050806008838154811061217e5761217e612743565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806121b6576121b66129c3565b6001900381819060005260206000200160009055905550505050565b60006121dd83610c54565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b0319811681146111b157600080fd5b60006020828403121561223e57600080fd5b813561101281612216565b60006020828403121561225b57600080fd5b5035919050565b60005b8381101561227d578181015183820152602001612265565b50506000910152565b6000815180845261229e816020860160208601612262565b601f01601f19169290920160200192915050565b6020815260006110126020830184612286565b6001600160a01b03811681146111b157600080fd5b600080604083850312156122ed57600080fd5b82356122f8816122c5565b946020939093013593505050565b60008083601f84011261231857600080fd5b50813567ffffffffffffffff81111561233057600080fd5b60208301915083602082850101111561234857600080fd5b9250929050565b6000806000806060858703121561236557600080fd5b843567ffffffffffffffff81111561237c57600080fd5b61238887828801612306565b909550935050602085013561239c816122c5565b9396929550929360400135925050565b6000806000606084860312156123c157600080fd5b83356123cc816122c5565b925060208401356123dc816122c5565b929592945050506040919091013590565b6000806040838503121561240057600080fd5b823591506020830135612412816122c5565b809150509250929050565b60006020828403121561242f57600080fd5b8135611012816122c5565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff8084111561246b5761246b61243a565b604051601f8501601f19908116603f011681019082821181831017156124935761249361243a565b816040528093508581528686860111156124ac57600080fd5b858560208301376000602087830101525050509392505050565b6000602082840312156124d857600080fd5b813567ffffffffffffffff8111156124ef57600080fd5b8201601f8101841361250057600080fd5b6108df84823560208401612450565b6000806040838503121561252257600080fd5b823561252d816122c5565b91506020830135801515811461241257600080fd5b6000806000806080858703121561255857600080fd5b8435612563816122c5565b93506020850135612573816122c5565b925060408501359150606085013567ffffffffffffffff81111561259657600080fd5b8501601f810187136125a757600080fd5b6125b687823560208401612450565b91505092959194509250565b600080604083850312156125d557600080fd5b50508035926020909101359150565b6000806000806000608086880312156125fc57600080fd5b853567ffffffffffffffff81111561261357600080fd5b61261f88828901612306565b9096509450506020860135612633816122c5565b925060408601359150606086013561264a816122c5565b809150509295509295909350565b6000806040838503121561266b57600080fd5b8235612676816122c5565b91506020830135612412816122c5565b600181811c9082168061269a57607f821691505b6020821081036126ba57634e487b7160e01b600052602260045260246000fd5b50919050565b6000602082840312156126d257600080fd5b8151611012816122c5565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60006020828403121561273c57600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b601f8211156107ef57600081815260208120601f850160051c810160208610156127805750805b601f850160051c820191505b8181101561279f5782815560010161278c565b505050505050565b815167ffffffffffffffff8111156127c1576127c161243a565b6127d5816127cf8454612686565b84612759565b602080601f83116001811461280a57600084156127f25750858301515b600019600386901b1c1916600185901b17855561279f565b600085815260208120601f198616915b828110156128395788860151825594840194600190910190840161281a565b50858210156128575787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b8082018082111561057957610579612867565b600083516128a2818460208801612262565b8351908301906128b6818360208801612262565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061298990830184612286565b9695505050505050565b6000602082840312156129a557600080fd5b815161101281612216565b8181038181111561057957610579612867565b634e487b7160e01b600052603160045260246000fdfea26469706673582212205cfc43bedd61f61b4a3f46d3256f147dea122b5c33f0fb748fb2fca629f76b4364736f6c63430008110033";

type RegistrarConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RegistrarConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Registrar__factory extends ContractFactory {
  constructor(...args: RegistrarConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _fns: PromiseOrValue<string>,
    _baseNode: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Registrar> {
    return super.deploy(_fns, _baseNode, overrides || {}) as Promise<Registrar>;
  }
  override getDeployTransaction(
    _fns: PromiseOrValue<string>,
    _baseNode: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_fns, _baseNode, overrides || {});
  }
  override attach(address: string): Registrar {
    return super.attach(address) as Registrar;
  }
  override connect(signer: Signer): Registrar__factory {
    return super.connect(signer) as Registrar__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RegistrarInterface {
    return new utils.Interface(_abi) as RegistrarInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Registrar {
    return new Contract(address, _abi, signerOrProvider) as Registrar;
  }
}
